services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: task-db
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules

  db:
    build:
      context: ./backend
      dockerfile: Dockerfile.db
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: task-db
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/init_tasks_table.sql:/docker-entrypoint-initdb.d/init_tasks_table.sql
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: checkbox@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: always

volumes:
  postgres-data:
  pgadmin-data:
